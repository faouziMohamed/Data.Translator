// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using km.Translate.DataLib.Data;

#nullable disable

namespace km.Translate.DataLib.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LongName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("LongName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ShortName")
                        .IsUnique();

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.Proposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AcceptationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("SentenceId")
                        .HasColumnType("int");

                    b.Property<int>("SentenceVoId")
                        .HasColumnType("int");

                    b.Property<int>("TargetLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("TranslatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TranslationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("VotesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("SentenceId");

                    b.HasIndex("TargetLanguageId");

                    b.HasIndex("TranslationHash")
                        .IsUnique();

                    b.HasIndex("VotesId");

                    b.ToTable("Propositions");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleName")
                        .IsUnique()
                        .HasFilter("[RoleName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.Sentence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SentenceVo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SrcLanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SrcLanguageId");

                    b.ToTable("Sentences");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApprovedPropositionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserDetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserDetailsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.UserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AccountVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("DownVotes")
                        .HasColumnType("bigint");

                    b.Property<long>("UpVotes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.Proposition", b =>
                {
                    b.HasOne("km.Translate.DataLib.Data.Models.User", "ApprovedBy")
                        .WithMany("ApprovedPropositions")
                        .HasForeignKey("ApprovedById");

                    b.HasOne("km.Translate.DataLib.Data.Models.Sentence", null)
                        .WithMany("Propositions")
                        .HasForeignKey("SentenceId");

                    b.HasOne("km.Translate.DataLib.Data.Models.Language", "TargetLanguage")
                        .WithMany()
                        .HasForeignKey("TargetLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("km.Translate.DataLib.Data.Models.Vote", "Votes")
                        .WithMany()
                        .HasForeignKey("VotesId");

                    b.Navigation("ApprovedBy");

                    b.Navigation("TargetLanguage");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.Sentence", b =>
                {
                    b.HasOne("km.Translate.DataLib.Data.Models.Language", "SrcLanguage")
                        .WithMany()
                        .HasForeignKey("SrcLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SrcLanguage");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.User", b =>
                {
                    b.HasOne("km.Translate.DataLib.Data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("km.Translate.DataLib.Data.Models.UserDetails", "UserDetails")
                        .WithMany()
                        .HasForeignKey("UserDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.Sentence", b =>
                {
                    b.Navigation("Propositions");
                });

            modelBuilder.Entity("km.Translate.DataLib.Data.Models.User", b =>
                {
                    b.Navigation("ApprovedPropositions");
                });
#pragma warning restore 612, 618
        }
    }
}
